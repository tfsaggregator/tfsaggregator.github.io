<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rules on Aggregator</title><link>https://tfsaggregator.github.io/docs/v3/rules/</link><description>Recent content in Rules on Aggregator</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://tfsaggregator.github.io/docs/v3/rules/index.xml" rel="self" type="application/rss+xml"/><item><title>Directives</title><link>https://tfsaggregator.github.io/docs/v3/rules/directives/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v3/rules/directives/</guid><description>Directives # The directives must appear in the first lines of a Rule file. They are parsed by Aggregator and removed before compiling the code.
language directive # .lang=C# .language=Csharp
Currently the only supported language is C#. You can use the .lang directive to specify the programming language used by the rule. If no language is specified: C# is default.
reference directive # Loads the specified assembly in the Rule execution context</description></item><item><title>WorkItem event objects</title><link>https://tfsaggregator.github.io/docs/v3/rules/workitem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v3/rules/workitem/</guid><description>These objects are available only for Work Items events.
WorkItem Object # The initial WorkItem object, the one which triggered the rule, is contained in the self variable.
Revisions # Navigate to previous versions of the work item.
WorkItem PreviousRevision Returns a read-only copy of the previous revision of this work item.
IEnumerable&amp;lt;WorkItem&amp;gt; Revisions Returns a read-only copy of all revisions of this work item.
Relations # Navigate to related work items.</description></item><item><title>Common objects</title><link>https://tfsaggregator.github.io/docs/v3/rules/common-rule-objects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v3/rules/common-rule-objects/</guid><description>The following objects are not event specific and can be used in any Rule.
Event variable [v0.9.11] # The event variable describes what triggered the rule. It can hold one of the following string constants.
&amp;#34;workitem.created&amp;#34; &amp;#34;workitem.updated&amp;#34; &amp;#34;workitem.commented&amp;#34; &amp;#34;workitem.deleted&amp;#34; &amp;#34;workitem.restored&amp;#34; This makes easier to write a single rule which reacts to multiple events.
Logger Object # The Function logger object is contained in the logger variable. It support four methods:</description></item><item><title>Basic examples</title><link>https://tfsaggregator.github.io/docs/v3/rules/rule-examples-basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v3/rules/rule-examples-basic/</guid><description>Basic Rule examples # To start with simple rules you can see here some examples, for more usage please see Advanced Examples
Hello World # A trivial rule that returns some core fields of the work item which triggered the rule.
$&amp;#34;Hello { self.WorkItemType } #{ self.Id } - { self.Title }!&amp;#34; Auto-close parent # This is more similar to classic TFS Aggregator. It moves a parent work item to Closed state, if all children are closed.</description></item><item><title>Advanced examples</title><link>https://tfsaggregator.github.io/docs/v3/rules/rule-examples-advanced/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v3/rules/rule-examples-advanced/</guid><description>Advanced Rule examples # Backlog work items: Auto-activate parent # This is a more advanced version which has no hard coded work item type names. It moves a parent work item to active state (activates parent), if a child gets activated and both parent and child are backlog work items
//Method to check if a &amp;#39;workItem&amp;#39; is in a &amp;#39;Progress&amp;#39; state bool IsInProgress(WorkItemWrapper workItem, BacklogWorkItemTypeStates workItemType) { var concreteStateNames = workItemType?</description></item></channel></rss>