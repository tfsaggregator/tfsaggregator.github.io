<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CLI Commands on Aggregator</title><link>https://tfsaggregator.github.io/docs/v3/commands/</link><description>Recent content in CLI Commands on Aggregator</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://tfsaggregator.github.io/docs/v3/commands/index.xml" rel="self" type="application/rss+xml"/><item><title>Common options</title><link>https://tfsaggregator.github.io/docs/v3/commands/common-options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v3/commands/common-options/</guid><description>Verbose option # All commands accept the --verbose option (or -v in the short form) to print additional messages for troubleshooting.
Naming Templates # With --namingTemplate, you can specify affixes for all Azure resource that will be created or used. follows
{ &amp;#34;ResourceGroupPrefix&amp;#34;: &amp;#34;aggregator-&amp;#34;, &amp;#34;ResourceGroupSuffix&amp;#34;: &amp;#34;-sfx&amp;#34;, &amp;#34;FunctionAppPrefix&amp;#34;: &amp;#34;fp&amp;#34;, &amp;#34;FunctionAppSuffix&amp;#34;: &amp;#34;fs&amp;#34;, &amp;#34;HostingPlanPrefix&amp;#34;: &amp;#34;hp&amp;#34;, &amp;#34;HostingPlanSuffix&amp;#34;: &amp;#34;hs&amp;#34;, &amp;#34;AppInsightPrefix&amp;#34;: &amp;#34;aip&amp;#34;, &amp;#34;AppInsightSuffix&amp;#34;: &amp;#34;ais&amp;#34;, &amp;#34;StorageAccountPrefix&amp;#34;: &amp;#34;strg&amp;#34;, &amp;#34;StorageAccountSuffix&amp;#34;: &amp;#34;31415&amp;#34; } If you use the --namingTemplate option, the --resourceGroup option is mandatory.</description></item><item><title>Authentication commands</title><link>https://tfsaggregator.github.io/docs/v3/commands/authentication-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v3/commands/authentication-commands/</guid><description>The first step for using Aggregator CLI is to logon into both Azure and Azure DevOps. You can a single command, logon.env, or two separate commands, logon.azure and logon.ado. The former is most useful in an automated scenario, while the other two can be more practical in an interactive session. Use the logoff command to remove any cached authentication data.
logon.azure # Logon into Azure. This must be done before other verbs.</description></item><item><title>Instance commands</title><link>https://tfsaggregator.github.io/docs/v3/commands/instance-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v3/commands/instance-commands/</guid><description>Azure Resource Names # Aggregator CLI has three ways of generating names for Azure Resources. Keep in mind, that Azure Function App and Storage resources must have unique names in Azure.
Basic template # This template is used when you do not specify the --resourceGroup option.
In this scenario Aggregator tries to create an Azure Resource Group for each instance. The name of the resource group derives from the instance name.</description></item><item><title>Rule commands</title><link>https://tfsaggregator.github.io/docs/v3/commands/rule-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v3/commands/rule-commands/</guid><description>add.rule # Add a rule to existing Aggregator instance in Azure. It requires three mandatory options.
Option Short form Description --instance -i The name of an existing Aggregator instance (Azure Function App). --name -n The name of the new Rule. This will be the name of the Azure Function. --file -f Relative or absolute path to the file with the Rule code.</description></item><item><title>Mapping commands</title><link>https://tfsaggregator.github.io/docs/v3/commands/map-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v3/commands/map-commands/</guid><description>map.rule # Maps an Aggregator Rule to existing Azure DevOps Projects. In other words it creates a webhook in Azure DevOps for the selected event and project.
These parameters identify the Rule.
Option Short form Description --instance -i The name of an existing Aggregator instance (Azure Function App). --resourceGroup -g Azure Resource Group that contains the Aggregator instance. --namingTemplate n/a Specify affixes for Azure resources.</description></item><item><title>Informational commands</title><link>https://tfsaggregator.github.io/docs/v3/commands/info-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v3/commands/info-commands/</guid><description>list.instances # Lists Aggregator instances, that is Azure Function Apps, within the Azure Subscription.
You should specify at least one of these options to limit the search scope.
Option Short form Description --location -l Name of Azure region hosting the Aggregator instance. --resourceGroup -g Azure Resource Group that contains the Aggregator instance. --namingTemplate n/a Specify affixes for Azure resources.</description></item><item><title>Examples</title><link>https://tfsaggregator.github.io/docs/v3/commands/command-examples/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v3/commands/command-examples/</guid><description>Sample Aggregator CLI usage # This page will show you increasing complex examples of using Aggregator CLI.
To run Aggregator CLI type aggregator-cli.exe on Windows, ./aggregator-cli on Linux or dotnet aggregator-cli.dll on any followed by the command and options. In the examples, we will use aggregator-cli. In PowerShell you can define an alias to exactly match the examples:
Set-Alias aggregator-cli (Resolve-Path .\aggregator-cli.exe) IMPORTANT: Please avoid na√Øve copy&amp;amp;paste of the examples, or other user will not be able to run the same.</description></item></channel></rss>