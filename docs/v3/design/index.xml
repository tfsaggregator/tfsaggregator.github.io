<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Design on Aggregator</title><link>https://tfsaggregator.github.io/docs/v3/design/</link><description>Recent content in Design on Aggregator</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://tfsaggregator.github.io/docs/v3/design/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://tfsaggregator.github.io/docs/v3/design/parallelism/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v3/design/parallelism/</guid><description>Normal flow # The diagram shows the normal Azure DevOps and Aggregator interaction.
mermaid.initialize({ flowchart: { useMaxWidth:true } }); sequenceDiagram User -+ AzDO : New Work Item AzDO --- User : Work Item(id=42, ver=1) activate Aggregator AzDO -+ Aggregator : event(workitem.created, id=42) Aggregator -+ AzDO : readWorkItem(id=42) AzDO --- Aggregator : ver=1 Aggregator - DataModel : new(WorkItem, id=42, ver=1) Aggregator -+ ruleA : triggers ruleA - DataModel : get(WorkItem, id=42) ruleA - DataModel : update(WorkItem, id=42) ruleA --- Aggregator : returns Aggregator - AzDO : updateWorkItem(id=42, ver=1) AzDO -- Aggregator : ver=2 deactivate Aggregator opt Cycle until exahustion activate Aggregator AzDO -+ Aggregator : event(workitem.</description></item></channel></rss>