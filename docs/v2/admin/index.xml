<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Administrator Guide on Aggregator</title><link>https://tfsaggregator.github.io/docs/v2/admin/</link><description>Recent content in Administrator Guide on Aggregator</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://tfsaggregator.github.io/docs/v2/admin/index.xml" rel="self" type="application/rss+xml"/><item><title>Installing the Server Plugin</title><link>https://tfsaggregator.github.io/docs/v2/admin/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v2/admin/install/</guid><description>This information does not apply to the Web Service version.
Pre-requisites # TFS # The TFS Aggregator works with the following versions of TFS:
TFS 2013 update 2,3,4,5 TFS 2015 RTM TFS 2015 update 1,2,3 TFS 2017 RTM TFS 2017 update 1 Azure DevOps Server 2019 Azure DevOps Server 2020 Azure DevOps Server 2022 The installer will detect the correct TFS version and will install the appropriate binary.</description></item><item><title>Installing the Web Service</title><link>https://tfsaggregator.github.io/docs/v2/admin/install-webhooks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v2/admin/install-webhooks/</guid><description>This information does not apply to theServer Plugin version.
Installing TFS Aggregator Web Service is a six step process:
Grant access to VSTS/TFS Deploy TfsAggregator web application Configure TFS Aggregator Define the policy Setup logging (optional) Setup the Web Hooks in TFS/VSTS Grant access to VSTS/TFS # There are three possible options to grant access. In most cases you will have to change the configuration later using the values collected in this step.</description></item><item><title>Using the console to test Policies</title><link>https://tfsaggregator.github.io/docs/v2/admin/console-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v2/admin/console-app/</guid><description>The TFSAggregator2.ConsoleApp.exe command line tool is extremely useful to test and validate your policy files before applying to TFS.
BEWARE Any changed workitem is written to TFS database! Use a test TFS instance.
Syntax # TFSAggregator2.ConsoleApp.exe &amp;lt;command&amp;gt; [&amp;lt;options&amp;gt;] The only supported command is run.
If you launch the command without arguments, it will display an help screen.
Options # The available options are:
Option (short form) Option (long form) Usage -h --help Shows help message and exit -f --policyFile=VALUE Policy file to test -c --teamProjectCollectionUrl=VALUE TFS Team Project Collection Url, e.</description></item><item><title>Logging</title><link>https://tfsaggregator.github.io/docs/v2/admin/logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v2/admin/logging/</guid><description>TFS Aggregator logging is quite rich but the exact configuration depends on your environment.
Logging levels # The possible Logging levels are: Critical, Error, Warning, Information or Normal, Verbose, and Diagnostic.
Enable Debug Logging # To control the verbosity in TFS Aggregator, you have to set a level attribute to the logging element in your TFSAggregator2.ServerPlugin.policies file. Use a value like Verbose or Diagnostic.
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt; &amp;lt;AggregatorConfiguration&amp;gt; &amp;lt;runtime&amp;gt; &amp;lt;logging level=&amp;quot;Diagnostic&amp;quot;/&amp;gt; &amp;lt;/runtime&amp;gt; Note that you can use the logger object in your rules to trace execution and values.</description></item><item><title>Troubleshooting</title><link>https://tfsaggregator.github.io/docs/v2/admin/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v2/admin/troubleshooting/</guid><description>So you setup TFS Aggregator and it just sits there&amp;hellip;. doing nothing&amp;hellip;
Well, this is a check list of things to double check.
Server Plugin Checklist # You are using it on a TFS 2013 update 2 or later server You installed the right version for your TFS server You can verify if assembly version matches TFS version using this Powershell code $pathToAssemblyFile = &amp;quot;C:\Program Files\Microsoft Team Foundation Server 15.</description></item><item><title>Support</title><link>https://tfsaggregator.github.io/docs/v2/admin/support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v2/admin/support/</guid><description>If you checked everything in Troubleshooting and it still does not work, create a new Issue on GitHub or send an email to [tfsaggregator@outlook.com](mailto:tfsaggregator@outlook.com?subject=Support Request). Please add any useful information like:
Aggregator version TFS version or VSTS Content of your TFSAggregator2.ServerPlugin.policies file (e.g. save it on https://gist.github.com/ and copy the link in the Issue) Content of your web.config file (Web Service only) Definition of your work item types (use witadmin exportwitd) If you built the assemblies yourselves, they take a fixed 2.</description></item><item><title>Security</title><link>https://tfsaggregator.github.io/docs/v2/admin/security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tfsaggregator.github.io/docs/v2/admin/security/</guid><description>We strove to limit the API exposed to Rules and the chance of unwanted access.
It is up to the TFS Administrator validate and deploy the policy file on production TFS.
Test the policy file on a TFS staging environment with a single Application Tier server. If you have more than one enabled, TFS can be turned temporarily off on a server using TFSServiceControl quiesce command.
Use the Rate Limit feature to reduce the chance of infinite loops.</description></item></channel></rss>